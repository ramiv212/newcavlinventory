{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Clear AVL\\\\Documents\\\\newcavlinventory\\\\frontend\\\\my-app\\\\src\\\\contexts\\\\jsonItemsContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemsByIdContext = /*#__PURE__*/createContext();\nconst itemsByNameContext = /*#__PURE__*/createContext();\nconst renderNamesContext = /*#__PURE__*/createContext(); // A \"provider\" is used to encapsulate only the\n// components that needs the state in this context\n\nfunction ItemProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // these states check when JSON is loaded\n  const [idIsLoaded, setIdIsLoaded] = useState(false);\n  const [nameIsLoaded, setNameIdIsLoaded] = useState(false);\n  const [renderNames, setRenderNames] = useState(false); // get JSON data by ID\n\n  async function getJson() {\n    var jsonData = await fetch('http://localhost:5000/api/items?by=ID').then(response => response.json()).then(data => JSON.parse(data));\n    setIdIsLoaded(true);\n    return jsonData;\n  } // get the list of JSON items from server by name\n\n\n  async function getJsonByName() {\n    var jsonData = await fetch('http://localhost:5000/api/items?by=name').then(response => response.json()).then(data => JSON.parse(data));\n    setNameIdIsLoaded(true);\n    return jsonData;\n  } //  delete item from server\n\n\n  function deleteItem(index, childIndex, editState, setQty) {\n    const url = \"http://localhost:5000/api/item/\" + childIndex;\n    const data = {};\n    const params = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data),\n      method: \"DELETE\"\n    };\n    let response = fetch(url, params).then(data => data.json()).then(res => res).then(data => {\n      if (data) {\n        // close edit state for this deleted child node\n        editState(false);\n        const itemParent = document.getElementsByClassName('main-parent-div' + index);\n        const itemChildren = document.getElementsByClassName('itemlist-children' + index);\n        const thisItem = document.getElementsByClassName('id' + childIndex); // remove this HTML node from DOM\n\n        thisItem[0].remove(); // check if this is the last child in the parent node. if so, delete parent node.\n\n        itemChildren[0].childNodes.length === 0 ? itemParent[0].remove() : console.log(); // update the quantity of items after deleting\n\n        setQty(itemChildren[0].childNodes.length);\n      }\n    });\n    return response;\n  }\n\n  return /*#__PURE__*/_jsxDEV(renderNamesContext.Provider, {\n    value: {\n      renderNames,\n      setRenderNames\n    },\n    children: /*#__PURE__*/_jsxDEV(itemsByIdContext.Provider, {\n      value: {\n        getJson,\n        idIsLoaded,\n        setIdIsLoaded,\n        deleteItem\n      },\n      children: /*#__PURE__*/_jsxDEV(itemsByNameContext.Provider, {\n        value: {\n          getJsonByName,\n          nameIsLoaded,\n          setNameIdIsLoaded\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ItemProvider, \"SnvTRuIHh3CyBuZLbI+RnSillPM=\");\n\n_c = ItemProvider;\nexport { ItemProvider, itemsByIdContext, itemsByNameContext, renderNamesContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemProvider\");","map":{"version":3,"names":["React","createContext","useState","itemsByIdContext","itemsByNameContext","renderNamesContext","ItemProvider","children","idIsLoaded","setIdIsLoaded","nameIsLoaded","setNameIdIsLoaded","renderNames","setRenderNames","getJson","jsonData","fetch","then","response","json","data","JSON","parse","getJsonByName","deleteItem","index","childIndex","editState","setQty","url","params","headers","body","stringify","method","res","itemParent","document","getElementsByClassName","itemChildren","thisItem","remove","childNodes","length","console","log"],"sources":["C:/Users/Clear AVL/Documents/newcavlinventory/frontend/my-app/src/contexts/jsonItemsContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\n\r\nconst itemsByIdContext = createContext();\r\nconst itemsByNameContext = createContext();\r\nconst renderNamesContext = createContext();\r\n\r\n// A \"provider\" is used to encapsulate only the\r\n// components that needs the state in this context\r\nfunction ItemProvider({ children }) {\r\n\r\n  // these states check when JSON is loaded\r\nconst [idIsLoaded, setIdIsLoaded] = useState(false)\r\nconst [nameIsLoaded, setNameIdIsLoaded] = useState(false)\r\nconst [renderNames, setRenderNames] = useState(false)\r\n\r\n// get JSON data by ID\r\nasync function getJson() {\r\n  var jsonData = await fetch('http://localhost:5000/api/items?by=ID')\r\n   .then(response => response.json())\r\n   .then(data => JSON.parse(data))\r\n\r\n   setIdIsLoaded(true)\r\n   return jsonData\r\n }\r\n\r\n// get the list of JSON items from server by name\r\n async function getJsonByName() {\r\n  var jsonData = await fetch('http://localhost:5000/api/items?by=name')\r\n   .then(response => response.json())\r\n   .then(data => JSON.parse(data))\r\n\r\n   setNameIdIsLoaded(true)\r\n   return jsonData\r\n }\r\n\r\n//  delete item from server\r\nfunction deleteItem(index,childIndex,editState,setQty){\r\n  const url = \"http://localhost:5000/api/item/\" + childIndex\r\n  const data = {}\r\n  const params = {\r\n    headers:{ \"Content-Type\": \"application/json\"},\r\n    body: JSON.stringify(data),\r\n    method: \"DELETE\"\r\n  }\r\n   let response = fetch(url,params)\r\n    .then(data => data.json())\r\n    .then(res => res)\r\n    .then(\r\n\r\n      (data) => {\r\n        if (data) {\r\n            // close edit state for this deleted child node\r\n            editState(false)\r\n\r\n            const itemParent = document.getElementsByClassName('main-parent-div' + index)\r\n            const itemChildren = document.getElementsByClassName('itemlist-children' + index)\r\n            const thisItem = document.getElementsByClassName('id' + childIndex)\r\n\r\n            // remove this HTML node from DOM\r\n            thisItem[0].remove()\r\n\r\n            // check if this is the last child in the parent node. if so, delete parent node.\r\n            itemChildren[0].childNodes.length === 0 ? itemParent[0].remove() : console.log()\r\n\r\n            // update the quantity of items after deleting\r\n            setQty(itemChildren[0].childNodes.length)\r\n        }\r\n      }\r\n\r\n    )\r\n\r\n    return response\r\n} \r\n\r\n  return (\r\n    <renderNamesContext.Provider value={{renderNames,setRenderNames}}>\r\n      <itemsByIdContext.Provider value={{getJson,idIsLoaded,setIdIsLoaded,deleteItem}}>\r\n        <itemsByNameContext.Provider value={{getJsonByName,nameIsLoaded,setNameIdIsLoaded}}>\r\n          {children}\r\n        </itemsByNameContext.Provider>\r\n      </itemsByIdContext.Provider>\r\n      </renderNamesContext.Provider>\r\n  );\r\n}\r\n\r\nexport { ItemProvider, itemsByIdContext, itemsByNameContext ,renderNamesContext};"],"mappings":"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"},"metadata":{},"sourceType":"module"}