{"ast":null,"code":"var _jsxFileName = \"/Users/rvaldes/Documents/Pythonprojects/newcavldatabase/frontend/my-app/src/components/Itemlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Item from './Item';\nimport { itemsByIdContext } from './../contexts/jsonItemsContext'; // function get the names of all items in the json object\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar nameSetFunc = jsonRes => {\n  // create a new set\n  var nameSet = new Set(); // loop over json object that is passed in as an argument\n\n  for (const key in jsonRes) {\n    if (Object.hasOwnProperty.call(jsonRes, key)) {\n      // get each element from object and assign it to const\n      const element = jsonRes[key]; // add the element to a set\n\n      nameSet.add(element['name']);\n    } // create an array and spread all the set elements into the array\n\n\n    var nameArray = [...nameSet];\n  }\n\n  return nameArray;\n}; // react component function\n\n\nfunction Itemlist() {\n  _s();\n\n  const {\n    getJson\n  } = useContext(itemsByIdContext);\n  const [items, setItems] = useState([]);\n  const [itemsByName, setItemsByName] = useState([]);\n  const [nameSet, setNameSet] = useState([]); // these states check when JSON is loaded\n\n  const [idIsLoaded, setIdIsLoaded] = useState(false);\n  const [nameIsLoaded, setNameIdIsLoaded] = useState(false); // get the list of JSON items from server by name\n\n  async function getJsonByName() {\n    var jsonData = await fetch('http://localhost:5000/api/items?by=name').then(response => response.json()).then(data => JSON.parse(data));\n    console.log('ran2');\n    setNameIdIsLoaded(true);\n    return jsonData;\n  } // run on render\n\n\n  useEffect(() => {\n    // get items from getJson functon and add to 'items' state\n    const setJson = async () => {\n      var jsonRes = await getJson();\n      setItems(jsonRes); // pass the JSON data into the 'create set' function\n      // and then add it to the Set state\n\n      setNameSet(nameSetFunc(jsonRes));\n      var jsonRes2 = await getJsonByName();\n      setItemsByName(jsonRes2);\n    };\n\n    setJson();\n    console.log(idIsLoaded, nameIsLoaded);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itemlist\",\n    children: [!(idIsLoaded && nameIsLoaded) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 44\n    }, this), idIsLoaded && nameIsLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemlist-inner-wrapper\",\n      children: Object.keys(nameSet).map((keyName, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          name: nameSet[keyName],\n          items: items,\n          manufacturer: itemsByName[nameSet[keyName]]['manufacturer'],\n          index: i,\n          setItems: setItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Itemlist, \"CuNRNS93CI8EhnDZhvX5aZ3EGqQ=\");\n\n_c = Itemlist;\nexport default Itemlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Itemlist\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Item","itemsByIdContext","nameSetFunc","jsonRes","nameSet","Set","key","Object","hasOwnProperty","call","element","add","nameArray","Itemlist","getJson","items","setItems","itemsByName","setItemsByName","setNameSet","idIsLoaded","setIdIsLoaded","nameIsLoaded","setNameIdIsLoaded","getJsonByName","jsonData","fetch","then","response","json","data","JSON","parse","console","log","setJson","jsonRes2","keys","map","keyName","i"],"sources":["/Users/rvaldes/Documents/Pythonprojects/newcavldatabase/frontend/my-app/src/components/Itemlist.js"],"sourcesContent":["import React,{useEffect,useState,useContext} from 'react'\nimport Item from './Item'\nimport {itemsByIdContext} from './../contexts/jsonItemsContext'\n\n// function get the names of all items in the json object\nvar nameSetFunc = (jsonRes) => {\n    // create a new set\n    var nameSet = new Set()\n\n    // loop over json object that is passed in as an argument\n    for (const key in jsonRes) {\n        if (Object.hasOwnProperty.call(jsonRes, key)) {\n\n            // get each element from object and assign it to const\n            const element = jsonRes[key];\n\n            // add the element to a set\n            nameSet.add(element['name'])\n        }\n\n    // create an array and spread all the set elements into the array\n    var nameArray = [...nameSet]\n\n    }return nameArray\n}\n\n// react component function\nfunction Itemlist() {\n\n    const {getJson} = useContext(itemsByIdContext)\n\n    const [items, setItems] = useState([])\n    const [itemsByName, setItemsByName] = useState([])\n    const [nameSet, setNameSet] = useState([])\n\n    // these states check when JSON is loaded\n    const [idIsLoaded, setIdIsLoaded] = useState(false)\n    const [nameIsLoaded, setNameIdIsLoaded] = useState(false)\n\n\n  \n    // get the list of JSON items from server by name\n     async function getJsonByName() {\n      var jsonData = await fetch('http://localhost:5000/api/items?by=name')\n       .then(response => response.json())\n       .then(data => JSON.parse(data))\n       console.log('ran2')\n       setNameIdIsLoaded(true)\n       return jsonData\n     }\n  \n\n    // run on render\n    useEffect(() => {\n\n      // get items from getJson functon and add to 'items' state\n      const setJson = async () => {\n        var jsonRes = await getJson()\n        setItems(jsonRes)\n\n        // pass the JSON data into the 'create set' function\n        // and then add it to the Set state\n        setNameSet(nameSetFunc(jsonRes))\n\n        var jsonRes2 = await getJsonByName()\n        setItemsByName(jsonRes2)\n      }\n  \n      setJson()\n\n      console.log(idIsLoaded,nameIsLoaded)\n\n    }, [])\n\n\n  return (\n    <div className='itemlist'>\n\n       {/* show a loading screen when JSON is not loaded */}\n       {(!(idIsLoaded && nameIsLoaded)) && <div>loading...</div>}\n\n      {/* do not display until all JSON is loaded */}\n      { (idIsLoaded && nameIsLoaded) &&\n      <div className='itemlist-inner-wrapper'>\n        {/* map over each name in the nameSet */}\n       {Object.keys(nameSet).map((keyName, i) => (\n            <div key={i}>\n                {/* pass down the index of the parent div to all of the children to add to their class be able to show and hide */}\n                <Item name={nameSet[keyName]} items={items} manufacturer={itemsByName[nameSet[keyName]]['manufacturer']} index={i} setItems={setItems}/>\n            </div>\n        ))}\n      </div>\n      }\n\n    </div>\n    \n  )\n}\n\nexport default Itemlist\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}