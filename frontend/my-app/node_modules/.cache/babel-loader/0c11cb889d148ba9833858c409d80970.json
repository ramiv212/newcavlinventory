{"ast":null,"code":"var _jsxFileName = \"/Users/rvaldes/Documents/Pythonprojects/newcavldatabase/frontend/my-app/src/components/Itemlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Item from './Item';\nimport { itemsByIdContext, itemsByNameContext, renderNamesContext } from './../contexts/jsonItemsContext'; // function get the names of all items in the json object\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar nameSetFunc = jsonRes => {\n  // create a new set\n  var nameSet = new Set(); // loop over json object that is passed in as an argument\n\n  for (const key in jsonRes) {\n    if (Object.hasOwnProperty.call(jsonRes, key)) {\n      // get each element from object and assign it to const\n      const element = jsonRes[key]; // add the element to a set\n\n      nameSet.add(element['name']);\n    } // create an array and spread all the set elements into the array\n\n\n    var nameArray = [...nameSet];\n  }\n\n  return nameArray;\n}; // react component function\n\n\nfunction Itemlist() {\n  _s();\n\n  const {\n    getJson,\n    idIsLoaded,\n    setIdIsLoaded\n  } = useContext(itemsByIdContext);\n  const {\n    getJsonByName,\n    asyncName,\n    nameIsLoaded,\n    setNameIdIsLoaded\n  } = useContext(itemsByNameContext);\n  const {\n    renderNames\n  } = useContext(renderNamesContext);\n  const [items, setItems] = useState([]);\n  const [itemsByName, setItemsByName] = useState([]);\n  const [nameSet, setNameSet] = useState([]); // run on render\n\n  useEffect(() => {\n    asyncName();\n    setIdIsLoaded(false);\n    setNameIdIsLoaded(false); // get items from getJson functon and add to 'items' state\n\n    const setJson = async () => {\n      var jsonRes = await getJson();\n      setItems(jsonRes); // pass the JSON data into the 'create set' function\n      // and then add it to the Set state\n\n      setNameSet(nameSetFunc(jsonRes));\n      var jsonRes2 = await getJsonByName();\n      setItemsByName(jsonRes2);\n    };\n\n    setJson();\n    console.log('itemlist re-rendered');\n  }, [renderNames]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itemlist\",\n    children: [!(idIsLoaded && nameIsLoaded) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 44\n    }, this), idIsLoaded && nameIsLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemlist-inner-wrapper\",\n      children: Object.keys(nameSet).map((keyName, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          name: nameSet[keyName],\n          items: items,\n          manufacturer: itemsByName[nameSet[keyName]]['manufacturer'],\n          index: i,\n          setItems: setItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Itemlist, \"KZDDxDNA7UOQ/i/hbxXF/d7DPuw=\");\n\n_c = Itemlist;\nexport default Itemlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Itemlist\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Item","itemsByIdContext","itemsByNameContext","renderNamesContext","nameSetFunc","jsonRes","nameSet","Set","key","Object","hasOwnProperty","call","element","add","nameArray","Itemlist","getJson","idIsLoaded","setIdIsLoaded","getJsonByName","asyncName","nameIsLoaded","setNameIdIsLoaded","renderNames","items","setItems","itemsByName","setItemsByName","setNameSet","setJson","jsonRes2","console","log","keys","map","keyName","i"],"sources":["/Users/rvaldes/Documents/Pythonprojects/newcavldatabase/frontend/my-app/src/components/Itemlist.js"],"sourcesContent":["import React,{useEffect,useState,useContext} from 'react'\nimport Item from './Item'\nimport {itemsByIdContext,itemsByNameContext,renderNamesContext} from './../contexts/jsonItemsContext'\n\n// function get the names of all items in the json object\nvar nameSetFunc = (jsonRes) => {\n    // create a new set\n    var nameSet = new Set()\n\n    // loop over json object that is passed in as an argument\n    for (const key in jsonRes) {\n        if (Object.hasOwnProperty.call(jsonRes, key)) {\n\n            // get each element from object and assign it to const\n            const element = jsonRes[key];\n\n            // add the element to a set\n            nameSet.add(element['name'])\n        }\n\n    // create an array and spread all the set elements into the array\n    var nameArray = [...nameSet]\n\n    }return nameArray\n}\n\n// react component function\nfunction Itemlist() {\n\n    const {getJson,idIsLoaded,setIdIsLoaded} = useContext(itemsByIdContext)\n    const {getJsonByName,asyncName,nameIsLoaded,setNameIdIsLoaded} = useContext(itemsByNameContext)\n    const {renderNames} = useContext(renderNamesContext)\n\n    const [items, setItems] = useState([])\n    const [itemsByName, setItemsByName] = useState([])\n    const [nameSet, setNameSet] = useState([])\n\n    // run on render\n    useEffect(() => {\n      asyncName()\n      setIdIsLoaded(false)\n      setNameIdIsLoaded(false)\n\n      // get items from getJson functon and add to 'items' state\n      const setJson = async () => {\n        var jsonRes = await getJson()\n        setItems(jsonRes)\n\n        // pass the JSON data into the 'create set' function\n        // and then add it to the Set state\n        setNameSet(nameSetFunc(jsonRes))\n\n        var jsonRes2 = await getJsonByName()\n        setItemsByName(jsonRes2)\n      }\n  \n      setJson()\n\n      console.log('itemlist re-rendered')\n\n    }, [renderNames])\n\n\n  return (\n    <div className='itemlist'>\n\n       {/* show a loading screen when JSON is not loaded */}\n       {(!(idIsLoaded && nameIsLoaded)) && <div>loading...</div>}\n\n      {/* do not display until all JSON is loaded */}\n      { (idIsLoaded && nameIsLoaded) &&\n      <div className='itemlist-inner-wrapper'>\n        {/* map over each name in the nameSet */}\n       {Object.keys(nameSet).map((keyName, i) => (\n            <div key={i}>\n                {/* pass down the index of the parent div to all of the children to add to their class be able to show and hide */}\n                <Item \n                name={nameSet[keyName]} \n                items={items} \n                manufacturer={itemsByName[nameSet[keyName]]['manufacturer']} \n                index={i} \n                setItems={setItems}/>\n            </div>\n        ))}\n      </div>\n      }\n\n    </div>\n    \n  )\n}\n\nexport default Itemlist\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}