{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Clear AVL\\\\Documents\\\\newcavlinventory\\\\frontend\\\\my-app\\\\src\\\\components\\\\Itemchild.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { renderNamesContext } from '../contexts/jsonItemsContext';\nimport { itemsByIdContext } from '../contexts/jsonItemsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Itemchild(_ref) {\n  _s();\n\n  let {\n    itemObject,\n    index,\n    childIndex,\n    setItems,\n    items,\n    onlyChild,\n    setOnlyChild,\n    refreshItem,\n    setRefreshItem,\n    hideChildren\n  } = _ref;\n  // this is a context that can be used to re-render the whole list\n  const {\n    renderNames,\n    setRenderNames\n  } = useContext(renderNamesContext);\n  const {\n    deleteItem\n  } = useContext(itemsByIdContext); // this sets the child to edit mode when the edit button is clicked\n\n  const [edit, setEdit] = useState(false); // these are the state of the input fields\n\n  const [barcodeState, setBarcodeState] = useState('');\n  const [nameState, setNameState] = useState('');\n  const [serialState, setSerialState] = useState('');\n  const [manufacturerState, setManufacturerState] = useState('');\n  const [categoryState, setCategoryState] = useState('');\n  const [storageState, setStorageState] = useState('');\n  const [statusState, setStatusState] = useState('');\n  const [notesState, setNotesState] = useState(''); // this state is to check if the name field was updated. If it was, re-render the whole item list.\n\n  const [nameWasUpdated, setNameWasUpdated] = useState(false); // send a PUT http request with updated values of an item. Return the updated list and set it as the new list.\n\n  function updateItem() {\n    const url = \"http://localhost:5000/api/item/\" + childIndex;\n    const data = {\n      manufacturer: manufacturerState,\n      name: nameState,\n      barcode: barcodeState,\n      serial: serialState,\n      category: categoryState,\n      storage: storageState,\n      status: statusState,\n      notes: notesState\n    };\n    const params = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data),\n      method: \"PUT\"\n    };\n    fetch(url, params).then(response => {\n      // check if the response code is not bad\n      if (response.status >= 200 && response.status <= 299) {\n        // if it is good, return the response\n        return response.json();\n      } else {\n        // if it is bad, get the server error response asynchronously\n        let getMsg = async response => {\n          // then get the json from the error response\n          let msg = await response.json(); // then parse the json and push it to an alert message\n\n          window.alert(JSON.parse(msg));\n        }; // call the error response function and pass mesage to it\n\n\n        getMsg(response); // throw an error\n\n        throw Error('Unique Constraint Barcode');\n      }\n    }) // if no error from server, set items state to the json response\n    .then(res => setItems(JSON.parse(res))) // catch an error\n    .catch(error => console.log(error)); // set the nameWasUpdated state back to false to use again\n\n    setNameWasUpdated(false);\n  }\n\n  return (\n    /*#__PURE__*/\n    // this classname is to be able to select to hide and un-hide chi;dren\n    _jsxDEV(\"div\", {\n      className: index + 'itemlist-child itemlist-child id' + childIndex,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemlist-child-inner-div\",\n        children: [edit && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-child-text\",\n          children: [\"Barcode:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), \"Manufacturer:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 22\n          }, this), \"Name:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 14\n          }, this), \"Serial:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 16\n          }, this), \"Category:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 18\n          }, this), \"Storage:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), \"Status:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 16\n          }, this), \"Notes:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [!edit && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [itemObject['barcode'], \" | \\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), !edit && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: itemObject['name']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), edit && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"item-child-input\",\n              value: barcodeState,\n              onChange: e => {\n                setBarcodeState(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 18\n          }, this), edit && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"item-child-input\",\n              value: manufacturerState,\n              onChange: e => {\n                setManufacturerState(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 18\n          }, this), edit && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"item-child-input\",\n              value: nameState,\n              onChange: e => {\n                setNameState(e.target.value);\n                setNameWasUpdated(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 18\n          }, this), edit && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"item-child-input\",\n              value: serialState,\n              onChange: e => {\n                setSerialState(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 18\n          }, this), edit && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"item-child-input\",\n              value: categoryState,\n              onChange: e => {\n                setCategoryState(e.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Audio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Lighting\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Rigging\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 18\n          }, this), edit && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"item-child-input\",\n              value: storageState,\n              onChange: e => {\n                setStorageState(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 18\n          }, this), edit && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"item-child-input\",\n              value: statusState,\n              onChange: e => {\n                setStatusState(e.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"OK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Broken\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Sent For Repair\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Loaned To Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"See Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 18\n          }, this), edit && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: 5,\n              value: notesState,\n              onChange: e => {\n                setNotesState(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 18\n          }, this), edit && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: // if edit state is false then set to true and vice versa\n            // if true then delete the item by index. deleteItem returns objet with all items\n            // also pass the setEdit func to delete item so that it can be set to false from inside that function\n            // this is to close the edit state once item has been deleted\n            () => {\n              window.confirm(\"Are you sure?\") ? deleteItem(index, childIndex, setEdit) : console.log('Delete Canceled');\n            },\n            className: \"btn btn-danger item-delete-button\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child-item-button-div\",\n        children: [!edit && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: // if edit state is false then set to true and vice versa\n          () => {\n            !edit ? setEdit(true) : setEdit(false);\n            setBarcodeState(itemObject['barcode']);\n            setManufacturerState(itemObject['manufacturer']);\n            setNameState(itemObject['name']);\n            setSerialState(itemObject['serial']);\n            setCategoryState(itemObject['category']);\n            setStorageState(itemObject['storage']);\n            setStatusState(itemObject['status']);\n            setNotesState(itemObject['notes']);\n          },\n          className: \"btn btn-primary itemchild-button\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 19\n        }, this), edit && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: // if edit state is false then set to true and vice versa\n          // check if the name was updated in the item. If it was, it wil re-render the whole items list to reflect the name change\n          () => {\n            edit ? setEdit(false) : setEdit(true);\n            updateItem();\n            nameWasUpdated ? setRenderNames(!renderNames) : console.log(nameWasUpdated);\n          },\n          className: \"btn btn-success itemchild-button\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 16\n        }, this), edit && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: // if edit state is false then set to true and vice versa\n          () => {\n            edit ? setEdit(false) : setEdit(true);\n          },\n          className: \"btn btn-danger itemchild-button\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline'\n          },\n          children: \"Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Itemchild, \"fd7sJGymnWXuK93JG596/buohzk=\");\n\n_c = Itemchild;\nexport default Itemchild;\n\nvar _c;\n\n$RefreshReg$(_c, \"Itemchild\");","map":{"version":3,"names":["React","useState","useContext","renderNamesContext","itemsByIdContext","Itemchild","itemObject","index","childIndex","setItems","items","onlyChild","setOnlyChild","refreshItem","setRefreshItem","hideChildren","renderNames","setRenderNames","deleteItem","edit","setEdit","barcodeState","setBarcodeState","nameState","setNameState","serialState","setSerialState","manufacturerState","setManufacturerState","categoryState","setCategoryState","storageState","setStorageState","statusState","setStatusState","notesState","setNotesState","nameWasUpdated","setNameWasUpdated","updateItem","url","data","manufacturer","name","barcode","serial","category","storage","status","notes","params","headers","body","JSON","stringify","method","fetch","then","response","json","getMsg","msg","window","alert","parse","Error","res","catch","error","console","log","e","target","value","confirm","display"],"sources":["C:/Users/Clear AVL/Documents/newcavlinventory/frontend/my-app/src/components/Itemchild.js"],"sourcesContent":["import React,{useState,useContext} from 'react'\r\nimport {renderNamesContext} from '../contexts/jsonItemsContext'\r\nimport {itemsByIdContext} from '../contexts/jsonItemsContext'\r\n\r\n\r\n\r\nfunction Itemchild({itemObject,index,childIndex,setItems,items,onlyChild,setOnlyChild,refreshItem,setRefreshItem,hideChildren}) {\r\n\r\n  // this is a context that can be used to re-render the whole list\r\n  const {renderNames,setRenderNames} = useContext(renderNamesContext)\r\n  const {deleteItem} = useContext(itemsByIdContext)\r\n\r\n  // this sets the child to edit mode when the edit button is clicked\r\n  const [edit,setEdit] = useState(false)\r\n\r\n  // these are the state of the input fields\r\n  const [barcodeState,setBarcodeState] = useState('')\r\n  const [nameState,setNameState] = useState('')\r\n  const [serialState,setSerialState] = useState('')\r\n  const [manufacturerState,setManufacturerState] = useState('')\r\n  const [categoryState,setCategoryState] = useState('')\r\n  const [storageState,setStorageState] = useState('')\r\n  const [statusState,setStatusState] = useState('')\r\n  const [notesState,setNotesState] = useState('')\r\n\r\n  // this state is to check if the name field was updated. If it was, re-render the whole item list.\r\n  const [nameWasUpdated,setNameWasUpdated] = useState(false)\r\n\r\n  // send a PUT http request with updated values of an item. Return the updated list and set it as the new list.\r\n  function updateItem(){\r\n    const url = \"http://localhost:5000/api/item/\" + childIndex\r\n    const data = {\r\n      manufacturer: manufacturerState,\r\n      name: nameState,\r\n      barcode: barcodeState,\r\n      serial: serialState,\r\n      category: categoryState,\r\n      storage: storageState,\r\n      status: statusState,\r\n      notes: notesState,\r\n    }\r\n    const params = {\r\n      headers:{ \"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(data),\r\n      method: \"PUT\"\r\n    }\r\n    fetch(url,params)\r\n    .then((response) => {\r\n      // check if the response code is not bad\r\n      if (response.status >= 200 && response.status <= 299) {\r\n        // if it is good, return the response\r\n        return response.json()\r\n      } else {\r\n        // if it is bad, get the server error response asynchronously\r\n          let getMsg = async (response) => {\r\n          // then get the json from the error response\r\n          let msg = await response.json()\r\n          // then parse the json and push it to an alert message\r\n          window.alert(JSON.parse(msg))\r\n        }\r\n        // call the error response function and pass mesage to it\r\n        getMsg(response);\r\n        // throw an error\r\n        throw Error('Unique Constraint Barcode')\r\n      }\r\n    })\r\n    // if no error from server, set items state to the json response\r\n    .then(res => setItems(JSON.parse(res)))\r\n    // catch an error\r\n    .catch((error) => (console.log(error)))\r\n\r\n    // set the nameWasUpdated state back to false to use again\r\n    setNameWasUpdated(false)\r\n  }\r\n\r\n  return (\r\n    // this classname is to be able to select to hide and un-hide chi;dren\r\n    <div className={index + 'itemlist-child itemlist-child id' + childIndex}>\r\n\r\n      <div className='itemlist-child-inner-div'>\r\n        {/* item name and barcode text. Show and hide with state. */}\r\n        \r\n        {(edit) && <div className='item-child-text'>\r\n        Barcode:<br />\r\n        Manufacturer:<br />\r\n        Name:<br />\r\n        Serial:<br />\r\n        Category:<br />\r\n        Storage:<br />\r\n        Status:<br />\r\n        Notes:\r\n        </div>}\r\n        <div>\r\n        {/* if edit mode is disabled, show name & barcode*/}\r\n        {(!edit) && <span>{itemObject['barcode']} | &nbsp;</span>}\r\n        {(!edit) && <span>{itemObject['name']}</span>}\r\n\r\n        {/* item input boxes. Show and hide with state. */}\r\n        {/* Change name and barcode state with onChange handler */}\r\n        {edit && <div><input className='item-child-input' value={barcodeState} onChange={\r\n          (e) => {setBarcodeState(e.target.value);}\r\n        }></input></div>}\r\n\r\n        {edit && <div><input className='item-child-input' value={manufacturerState} onChange={\r\n          (e) => {setManufacturerState(e.target.value);}\r\n        }></input></div>}\r\n\r\n        {edit && <div><input className='item-child-input' value={nameState} onChange={\r\n          (e) => {setNameState(e.target.value);setNameWasUpdated(true)}\r\n        }></input></div>}\r\n        \r\n        {edit && <div><input className='item-child-input' value={serialState} onChange={\r\n          (e) => {setSerialState(e.target.value);}\r\n        }></input></div>}\r\n\r\n        {edit && <div><select className='item-child-input' value={categoryState} onChange={\r\n          (e) => {setCategoryState(e.target.value);}\r\n        }>\r\n          <option>Audio</option>\r\n          <option>Video</option>\r\n          <option>Lighting</option>\r\n          <option>Rigging</option>\r\n          <option>Other</option>\r\n          </select></div>}\r\n        \r\n        {edit && <div><input className='item-child-input' value={storageState} onChange={\r\n          (e) => {setStorageState(e.target.value);}\r\n        }></input></div>}\r\n\r\n        {edit && <div><select className='item-child-input' value={statusState} onChange={\r\n          (e) => {setStatusState(e.target.value);}\r\n\r\n        }>\r\n          \r\n          <option>OK</option>\r\n          <option>Broken</option>\r\n          <option>Sent For Repair</option>\r\n          <option>Loaned To Customer</option>\r\n          <option>See Notes</option>\r\n\r\n        </select></div>}\r\n\r\n        {edit && <div><textarea rows={5} value={notesState} onChange={\r\n          (e) => {setNotesState(e.target.value);}\r\n        }></textarea></div>}\r\n\r\n\r\n        {/* delete button */}\r\n        {edit && <button onClick={\r\n        // if edit state is false then set to true and vice versa\r\n        // if true then delete the item by index. deleteItem returns objet with all items\r\n        // also pass the setEdit func to delete item so that it can be set to false from inside that function\r\n        // this is to close the edit state once item has been deleted\r\n        () => {window.confirm(\"Are you sure?\") ? deleteItem(index,childIndex,setEdit)\r\n               : console.log('Delete Canceled')}\r\n      } className='btn btn-danger item-delete-button'>Delete</button>}\r\n\r\n        </div>\r\n      </div>\r\n      \r\n      <div className='child-item-button-div'>\r\n      {/* edit button. Show and hide with state. Populate\r\n      the input boxes with object info. */}\r\n      {(!edit) && <button onClick={\r\n        // if edit state is false then set to true and vice versa\r\n        () => {(!edit) ? setEdit(true) : setEdit(false)\r\n                setBarcodeState(itemObject['barcode'])\r\n                setManufacturerState(itemObject['manufacturer'])\r\n                setNameState(itemObject['name'])\r\n                setSerialState(itemObject['serial'])\r\n                setCategoryState(itemObject['category'])\r\n                setStorageState(itemObject['storage'])\r\n                setStatusState(itemObject['status'])\r\n                setNotesState(itemObject['notes'])}\r\n      } className='btn btn-primary itemchild-button'>Edit</button>}\r\n\r\n      {/* update button */}\r\n      {edit && <button onClick={\r\n        // if edit state is false then set to true and vice versa\r\n        // check if the name was updated in the item. If it was, it wil re-render the whole items list to reflect the name change\r\n        () => {(edit) ? setEdit(false) : setEdit(true); updateItem(); nameWasUpdated ? setRenderNames(!renderNames):console.log(nameWasUpdated)}\r\n      } className='btn btn-success itemchild-button'>Update</button>}\r\n\r\n      {/* cancel update button */}\r\n      {edit && <button onClick={\r\n        // if edit state is false then set to true and vice versa\r\n        () => {(edit) ? setEdit(false) : setEdit(true);}\r\n      } className='btn btn-danger itemchild-button'>Cancel</button>}\r\n\r\n      <br />\r\n      <div style={{display: 'inline'}}>Validation</div>\r\n    </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Itemchild"],"mappings":"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"},"metadata":{},"sourceType":"module"}