{"ast":null,"code":"var _jsxFileName = \"/Users/rvaldes/Documents/Pythonprojects/newcavldatabase/frontend/my-app/src/components/helperFuncs.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function validateBarcode(userInput, state) {\n  // check if lentgth\n  if (userInput.length !== 8) {\n    state( /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Length of barcode must be 8 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 15\n    }, this));\n  } else if (isNaN(userInput)) {\n    state( /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Barcode must be a number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 15\n    }, this));\n  } else {\n    state(\"\");\n  }\n\n  return userInput;\n}\nexport function deleteAll(name, index) {\n  const url = \"http://localhost:5000/api/items/\" + name;\n  const data = {};\n  const params = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data),\n    method: \"DELETE\"\n  };\n  fetch(url, params).then(response => {\n    // check if the response code is not bad\n    if (response.status >= 200 && response.status <= 299) {\n      // if it is good, return the response and delete item parent div\n      if (window.confirm('Are you sure? This action cannot be undone!')) {\n        const parentDiv = document.getElementsByClassName('main-parent-div' + index);\n        parentDiv[0].style.display = 'none';\n      }\n\n      return response.json();\n    } else {\n      // if it is bad, get the server error response asynchronously\n      let getMsg = async response => {\n        // then get the json from the error response\n        let msg = await response.json(); // then parse the json and push it to an alert message\n\n        window.alert(JSON.parse(msg));\n      }; // call the error response function and pass mesage to it\n\n\n      getMsg(response); // throw an error\n\n      throw Error('Unable To Delete');\n    }\n  }) // catch an error\n  .catch(error => console.log(error));\n}","map":{"version":3,"names":["validateBarcode","userInput","state","length","isNaN","deleteAll","name","index","url","data","params","headers","body","JSON","stringify","method","fetch","then","response","status","window","confirm","parentDiv","document","getElementsByClassName","style","display","json","getMsg","msg","alert","parse","Error","catch","error","console","log"],"sources":["/Users/rvaldes/Documents/Pythonprojects/newcavldatabase/frontend/my-app/src/components/helperFuncs.js"],"sourcesContent":["export function validateBarcode(userInput,state){\n\n    // check if lentgth\n\n    if (userInput.length !== 8){\n        state(<span>Length of barcode must be 8 characters</span>)\n    }else if (isNaN(userInput)){\n        state(<span>Barcode must be a number</span>)\n    } else {\n        state(\"\")\n    }\n    \n    return userInput\n}\n\n\nexport function deleteAll(name,index) {\n    const url = \"http://localhost:5000/api/items/\" + name\n    const data = {}\n    const params = {\n      headers:{ \"Content-Type\": \"application/json\"},\n      body: JSON.stringify(data),\n      method: \"DELETE\"\n    }\n    fetch(url,params)\n    .then((response) => {\n      // check if the response code is not bad\n      if (response.status >= 200 && response.status <= 299) {\n        // if it is good, return the response and delete item parent div\n        \n        if (window.confirm('Are you sure? This action cannot be undone!')){\n            const parentDiv = document.getElementsByClassName('main-parent-div' + index)\n            parentDiv[0].style.display = 'none'\n        }\n        return response.json()\n      } else {\n        // if it is bad, get the server error response asynchronously\n          let getMsg = async (response) => {\n          // then get the json from the error response\n          let msg = await response.json()\n          // then parse the json and push it to an alert message\n          window.alert(JSON.parse(msg))\n        }\n        // call the error response function and pass mesage to it\n        getMsg(response);\n        // throw an error\n        throw Error('Unable To Delete')\n      }\n    })\n    // catch an error\n    .catch((error) => (console.log(error)))\n\n  }"],"mappings":";;AAAA,OAAO,SAASA,eAAT,CAAyBC,SAAzB,EAAmCC,KAAnC,EAAyC;EAE5C;EAEA,IAAID,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA2B;IACvBD,KAAK,eAAC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAD,CAAL;EACH,CAFD,MAEM,IAAIE,KAAK,CAACH,SAAD,CAAT,EAAqB;IACvBC,KAAK,eAAC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAD,CAAL;EACH,CAFK,MAEC;IACHA,KAAK,CAAC,EAAD,CAAL;EACH;;EAED,OAAOD,SAAP;AACH;AAGD,OAAO,SAASI,SAAT,CAAmBC,IAAnB,EAAwBC,KAAxB,EAA+B;EAClC,MAAMC,GAAG,GAAG,qCAAqCF,IAAjD;EACA,MAAMG,IAAI,GAAG,EAAb;EACA,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAC;MAAE,gBAAgB;IAAlB,CADK;IAEbC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFO;IAGbM,MAAM,EAAE;EAHK,CAAf;EAKAC,KAAK,CAACR,GAAD,EAAKE,MAAL,CAAL,CACCO,IADD,CACOC,QAAD,IAAc;IAClB;IACA,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,IAAmB,GAAjD,EAAsD;MACpD;MAEA,IAAIC,MAAM,CAACC,OAAP,CAAe,6CAAf,CAAJ,EAAkE;QAC9D,MAAMC,SAAS,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,oBAAoBjB,KAApD,CAAlB;QACAe,SAAS,CAAC,CAAD,CAAT,CAAaG,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;MACH;;MACD,OAAOR,QAAQ,CAACS,IAAT,EAAP;IACD,CARD,MAQO;MACL;MACE,IAAIC,MAAM,GAAG,MAAOV,QAAP,IAAoB;QACjC;QACA,IAAIW,GAAG,GAAG,MAAMX,QAAQ,CAACS,IAAT,EAAhB,CAFiC,CAGjC;;QACAP,MAAM,CAACU,KAAP,CAAajB,IAAI,CAACkB,KAAL,CAAWF,GAAX,CAAb;MACD,CALC,CAFG,CAQL;;;MACAD,MAAM,CAACV,QAAD,CAAN,CATK,CAUL;;MACA,MAAMc,KAAK,CAAC,kBAAD,CAAX;IACD;EACF,CAxBD,EAyBA;EAzBA,CA0BCC,KA1BD,CA0BQC,KAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CA1BnB;AA4BD"},"metadata":{},"sourceType":"module"}