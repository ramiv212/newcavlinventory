{"ast":null,"code":"var _jsxFileName = \"/Users/rvaldes/Documents/Pythonprojects/newcavldatabase/frontend/my-app/src/components/Itemchild.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Itemchild(_ref) {\n  _s();\n\n  let {\n    itemObject,\n    index\n  } = _ref;\n  const [edit, setEdit] = useState(false);\n  const [barcodeState, setBarcodeState] = useState('');\n  const [nameState, setNameState] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: index + ' ' + 'itemlist-child',\n    children: [!edit && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [itemObject['barcode'], \" | \\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 19\n    }, this), !edit && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: itemObject['name']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 19\n    }, this), edit && /*#__PURE__*/_jsxDEV(\"input\", {\n      value: barcodeState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this), \"\\xA0\", edit && /*#__PURE__*/_jsxDEV(\"input\", {\n      value: nameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: // if edit state is false then set to true and vice versa\n      () => {\n        !edit ? setEdit(true) : setEdit(false);\n        setBarcodeState(itemObject['barcode']);\n        setNameState(itemObject['name']);\n      },\n      className: \"btn btn-primary itemchild-button\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: // if edit state is false then set to true and vice versa\n      () => {\n        !edit ? setEdit(true) : setEdit(false);\n        setBarcodeState(itemObject['barcode']);\n        setNameState(itemObject['name']);\n      },\n      className: \"btn btn-primary itemchild-button\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Itemchild, \"JOS9EE7Tdsvyg+5nd3VE3pAdMXQ=\");\n\n_c = Itemchild;\nexport default Itemchild;\n\nvar _c;\n\n$RefreshReg$(_c, \"Itemchild\");","map":{"version":3,"names":["React","useState","Itemchild","itemObject","index","edit","setEdit","barcodeState","setBarcodeState","nameState","setNameState"],"sources":["/Users/rvaldes/Documents/Pythonprojects/newcavldatabase/frontend/my-app/src/components/Itemchild.js"],"sourcesContent":["import React,{useState} from 'react'\n\nfunction Itemchild({itemObject,index}) {\n\n  const [edit,setEdit] = useState(false)\n  const [barcodeState,setBarcodeState] = useState('')\n  const [nameState,setNameState] = useState('')\n\n  return (\n    <div className={index + ' ' + 'itemlist-child'}>\n      {/* item name and barcode text. Show and hide with state. */}\n      {(!edit) && <span>{itemObject['barcode']} | &nbsp;</span>}\n      {(!edit) && <span>{itemObject['name']}</span>}\n\n      {/* item input boxes. Show and hide with state. */}\n      {edit && <input value={barcodeState}></input>}&nbsp;\n      {edit && <input value={nameState}></input>}\n\n      {/* edit button. Show and hide with state. Populate\n      the input boxes with object info. */}\n      <button onClick={\n        // if edit state is false then set to true and vice versa\n        () => {(!edit) ? setEdit(true) : setEdit(false)\n                setBarcodeState(itemObject['barcode'])\n                setNameState(itemObject['name'])}\n      } className='btn btn-primary itemchild-button'>Edit</button>\n\n\n<button onClick={\n        // if edit state is false then set to true and vice versa\n        () => {(!edit) ? setEdit(true) : setEdit(false)\n                setBarcodeState(itemObject['barcode'])\n                setNameState(itemObject['name'])}\n      } className='btn btn-primary itemchild-button'>Edit</button>\n\n\n    </div>\n  )\n}\n\nexport default Itemchild"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;AAEA,SAASC,SAAT,OAAuC;EAAA;;EAAA,IAApB;IAACC,UAAD;IAAYC;EAAZ,CAAoB;EAErC,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,KAAD,CAA/B;EACA,MAAM,CAACM,YAAD,EAAcC,eAAd,IAAiCP,QAAQ,CAAC,EAAD,CAA/C;EACA,MAAM,CAACQ,SAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;EAEA,oBACE;IAAK,SAAS,EAAEG,KAAK,GAAG,GAAR,GAAc,gBAA9B;IAAA,WAEI,CAACC,IAAF,iBAAW;MAAA,WAAOF,UAAU,CAAC,SAAD,CAAjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFd,EAGI,CAACE,IAAF,iBAAW;MAAA,UAAOF,UAAU,CAAC,MAAD;IAAjB;MAAA;MAAA;MAAA;IAAA,QAHd,EAMGE,IAAI,iBAAI;MAAO,KAAK,EAAEE;IAAd;MAAA;MAAA;MAAA;IAAA,QANX,UAOGF,IAAI,iBAAI;MAAO,KAAK,EAAEI;IAAd;MAAA;MAAA;MAAA;IAAA,QAPX,eAWE;MAAQ,OAAO,EACb;MACA,MAAM;QAAE,CAACJ,IAAF,GAAUC,OAAO,CAAC,IAAD,CAAjB,GAA0BA,OAAO,CAAC,KAAD,CAAjC;QACCE,eAAe,CAACL,UAAU,CAAC,SAAD,CAAX,CAAf;QACAO,YAAY,CAACP,UAAU,CAAC,MAAD,CAAX,CAAZ;MAAiC,CAJ3C;MAKE,SAAS,EAAC,kCALZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF,eAmBJ;MAAQ,OAAO,EACP;MACA,MAAM;QAAE,CAACE,IAAF,GAAUC,OAAO,CAAC,IAAD,CAAjB,GAA0BA,OAAO,CAAC,KAAD,CAAjC;QACCE,eAAe,CAACL,UAAU,CAAC,SAAD,CAAX,CAAf;QACAO,YAAY,CAACP,UAAU,CAAC,MAAD,CAAX,CAAZ;MAAiC,CAJjD;MAKQ,SAAS,EAAC,kCALlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBI;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GApCQD,S;;KAAAA,S;AAsCT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}