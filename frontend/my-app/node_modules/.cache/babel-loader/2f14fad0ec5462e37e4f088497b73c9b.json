{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Clear AVL\\\\Documents\\\\newcavlinventory\\\\frontend\\\\my-app\\\\src\\\\components\\\\helperFuncs.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function validateBarcode(userInput, state) {\n  // check if lentgth\n  if (userInput.length != 8) {\n    state( /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Length of barcode must be 8 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 15\n    }, this));\n  } else if (isNaN(userInput)) {\n    state( /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Barcode must be a number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 15\n    }, this));\n  } else {\n    state(\"\");\n  }\n\n  return userInput;\n}\nexport function deleteAll(name, index) {\n  const url = \"http://localhost:5000/api/items/\" + name;\n  const data = {};\n  const params = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data),\n    method: \"DELETE\"\n  };\n  fetch(url, params).then(response => {\n    // check if the response code is not bad\n    if (response.status >= 200 && response.status <= 299) {\n      // if it is good, return the response\n      const parentDiv = document.getElementsByClassName('parent-item' + index);\n      parentDiv.delete();\n      return response.json();\n    } else {\n      // if it is bad, get the server error response asynchronously\n      let getMsg = async response => {\n        // then get the json from the error response\n        let msg = await response.json(); // then parse the json and push it to an alert message\n\n        window.alert(JSON.parse(msg));\n      }; // call the error response function and pass mesage to it\n\n\n      getMsg(response); // throw an error\n\n      throw Error('Unable To Delete');\n    }\n  }) // catch an error\n  .catch(error => console.log(error));\n}","map":{"version":3,"names":["validateBarcode","userInput","state","length","isNaN","deleteAll","name","index","url","data","params","headers","body","JSON","stringify","method","fetch","then","response","status","parentDiv","document","getElementsByClassName","delete","json","getMsg","msg","window","alert","parse","Error","catch","error","console","log"],"sources":["C:/Users/Clear AVL/Documents/newcavlinventory/frontend/my-app/src/components/helperFuncs.js"],"sourcesContent":["export function validateBarcode(userInput,state){\r\n\r\n    // check if lentgth\r\n\r\n    if (userInput.length != 8){\r\n        state(<span>Length of barcode must be 8 characters</span>)\r\n    }else if (isNaN(userInput)){\r\n        state(<span>Barcode must be a number</span>)\r\n    } else {\r\n        state(\"\")\r\n    }\r\n    \r\n    return userInput\r\n}\r\n\r\n\r\nexport function deleteAll(name,index) {\r\n    const url = \"http://localhost:5000/api/items/\" + name\r\n    const data = {}\r\n    const params = {\r\n      headers:{ \"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(data),\r\n      method: \"DELETE\"\r\n    }\r\n    fetch(url,params)\r\n    .then((response) => {\r\n      // check if the response code is not bad\r\n      if (response.status >= 200 && response.status <= 299) {\r\n        // if it is good, return the response\r\n        const parentDiv = document.getElementsByClassName('parent-item' + index)\r\n        parentDiv.delete()\r\n        return response.json()\r\n      } else {\r\n        // if it is bad, get the server error response asynchronously\r\n          let getMsg = async (response) => {\r\n          // then get the json from the error response\r\n          let msg = await response.json()\r\n          // then parse the json and push it to an alert message\r\n          window.alert(JSON.parse(msg))\r\n        }\r\n        // call the error response function and pass mesage to it\r\n        getMsg(response);\r\n        // throw an error\r\n        throw Error('Unable To Delete')\r\n      }\r\n    })\r\n    // catch an error\r\n    .catch((error) => (console.log(error)))\r\n\r\n  }"],"mappings":";;AAAA,OAAO,SAASA,eAAT,CAAyBC,SAAzB,EAAmCC,KAAnC,EAAyC;EAE5C;EAEA,IAAID,SAAS,CAACE,MAAV,IAAoB,CAAxB,EAA0B;IACtBD,KAAK,eAAC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAD,CAAL;EACH,CAFD,MAEM,IAAIE,KAAK,CAACH,SAAD,CAAT,EAAqB;IACvBC,KAAK,eAAC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAD,CAAL;EACH,CAFK,MAEC;IACHA,KAAK,CAAC,EAAD,CAAL;EACH;;EAED,OAAOD,SAAP;AACH;AAGD,OAAO,SAASI,SAAT,CAAmBC,IAAnB,EAAwBC,KAAxB,EAA+B;EAClC,MAAMC,GAAG,GAAG,qCAAqCF,IAAjD;EACA,MAAMG,IAAI,GAAG,EAAb;EACA,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAC;MAAE,gBAAgB;IAAlB,CADK;IAEbC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFO;IAGbM,MAAM,EAAE;EAHK,CAAf;EAKAC,KAAK,CAACR,GAAD,EAAKE,MAAL,CAAL,CACCO,IADD,CACOC,QAAD,IAAc;IAClB;IACA,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,IAAmB,GAAjD,EAAsD;MACpD;MACA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,gBAAgBf,KAAhD,CAAlB;MACAa,SAAS,CAACG,MAAV;MACA,OAAOL,QAAQ,CAACM,IAAT,EAAP;IACD,CALD,MAKO;MACL;MACE,IAAIC,MAAM,GAAG,MAAOP,QAAP,IAAoB;QACjC;QACA,IAAIQ,GAAG,GAAG,MAAMR,QAAQ,CAACM,IAAT,EAAhB,CAFiC,CAGjC;;QACAG,MAAM,CAACC,KAAP,CAAaf,IAAI,CAACgB,KAAL,CAAWH,GAAX,CAAb;MACD,CALC,CAFG,CAQL;;;MACAD,MAAM,CAACP,QAAD,CAAN,CATK,CAUL;;MACA,MAAMY,KAAK,CAAC,kBAAD,CAAX;IACD;EACF,CArBD,EAsBA;EAtBA,CAuBCC,KAvBD,CAuBQC,KAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAvBnB;AAyBD"},"metadata":{},"sourceType":"module"}